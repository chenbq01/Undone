<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled" />

	<!-- 自定义表单验证过滤器 支持用户名、密码和校验码验证 -->
	<beans:bean id="usernamePasswordCaptchaAuthenticationFilter"
		class="org.springframework.security.web.extension.captcha.authentication.UsernamePasswordCaptchaAuthenticationFilter">
		<!-- 校验登录是否有效的虚拟url -->
		<beans:property name="requiresAuthenticationRequestMatcher">
			<beans:bean
				class="org.springframework.security.web.util.matcher.AntPathRequestMatcher">
				<beans:constructor-arg name="pattern"
					value="/spring_security_form_check" />
			</beans:bean>
		</beans:property>
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="sessionAuthenticationStrategy"
			ref="sessionAuthenticationStrategy" />
		<beans:property name="usernameParameter" value="spring_security_form_username" />
		<beans:property name="passwordParameter" value="spring_security_form_password" />
		<beans:property name="captchaParameter" value="spring_security_form_captcha" />
		<beans:property name="captchaService" ref="imageCaptchaService" />
		<beans:property name="postOnly" value="true" />
		<beans:property name="rememberMeServices" ref="rememberMeServices" />
		<beans:property name="authenticationSuccessHandler">
			<!-- 自定义登录成功后的处理handler -->
			<beans:bean
				class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<!-- 登录成功后的默认url -->
				<beans:property name="defaultTargetUrl" value="/" />
				<beans:property name="alwaysUseDefaultTargetUrl"
					value="true" />
			</beans:bean>
		</beans:property>
		<beans:property name="authenticationFailureHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<!-- 登录失败后的默认Url -->
				<beans:property name="defaultFailureUrl" value="/logout" />
			</beans:bean>
		</beans:property>
	</beans:bean>

	<!-- 自定义Session管理过滤器 可同时控制Session并发和session fixation防护 -->
	<beans:bean id="concurrencyFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:constructor-arg name="expiredUrl" value="/login" />
	</beans:bean>
	<beans:bean id="sessionAuthenticationStrategy"
		class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
		<beans:constructor-arg name="delegateStrategies">
			<beans:list>
				<!-- 配置session fixation防护 -->
				<beans:bean
					class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
					<beans:property name="migrateSessionAttributes"
						value="true" />
				</beans:bean>
				<!-- 注册Session 配合Session并发控制 -->
				<beans:bean
					class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
					<beans:constructor-arg name="sessionRegistry"
						ref="sessionRegistry" />
				</beans:bean>
				<!-- 配置session并发控制 同一用户名只允许1个会话 -->
				<beans:bean
					class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
					<beans:constructor-arg name="sessionRegistry"
						ref="sessionRegistry" />
					<beans:property name="maximumSessions" value="1" />
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user authorities="ROLE_USER" name="guest" password="guest" />
				<user authorities="ROLE_ADMIN" name="admin" password="admin" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="loginEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<!-- 默认登录页的url -->
		<beans:constructor-arg value="/login" />
	</beans:bean>

	<!-- 资源文件不拦截 -->
	<http pattern="/resources/**" security="none" />
	<!-- 登录页面不拦截 -->
	<http pattern="/login" security="none" />
	<!-- 访问拒绝页面不拦截 -->
	<http pattern="/accessdenied" security="none" />
	<!-- 验证码请求不拦截 -->
	<http pattern="/captcha" security="none" />

	<http use-expressions="true" access-denied-page="/accessdenied"
		entry-point-ref="loginEntryPoint">
		<intercept-url pattern="/*" access="isAuthenticated()" />

		<logout invalidate-session="true" logout-success-url="/"
			logout-url="/logout" />
		<remember-me key="remember_me_key" remember-me-parameter="spring_security_form_rememberme"
			services-alias="rememberMeServices" />
		<custom-filter ref="usernamePasswordCaptchaAuthenticationFilter"
			position="FORM_LOGIN_FILTER" />
		<custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER" />
	</http>

</beans:beans>